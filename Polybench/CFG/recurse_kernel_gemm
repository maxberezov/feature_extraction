Workspace recurse deleted.
setenv PIPS_CPP_FLAGS "-I /home/maksim/PycharmProjects/unrolling/Polybench/poly_preprocessed/utilities -I /home/maksim/PycharmProjects/unrolling/Polybench/poly_preprocessed/linear-algebra/blas/gemm -DPOLYBENCH_TIME"
setproperty ABORT_ON_USER_ERROR TRUE
setproperty PREPROCESSOR_MISSING_FILE_HANDLING "generate"
setproperty FOR_TO_DO_LOOP_IN_CONTROLIZER TRUE
Registering file /home/maksim/PycharmProjects/unrolling/Polybench/poly_preprocessed/linear-algebra/blas/gemm/gemm.c
Checking C syntax of file "/home/maksim/PycharmProjects/unrolling/Polybench/poly_preprocessed/linear-algebra/blas/gemm/gemm.c"
Preprocessing file /home/maksim/PycharmProjects/unrolling/Polybench/poly_preprocessed/linear-algebra/blas/gemm/gemm.c
Splitting file    ./recurse.database/Tmp/gemm.cpp_processed.c
  Module         main
  Module         kernel_gemm
  Module         gemm!print_array
  Module         gemm!init_array
  Module         gemm!
Workspace recurse created and opened.
Main module PROGRAM "main" selected.
Module main selected
Request: build phase/rule GEN_MULTI_RECURSE_EXPLORER for module kernel_gemm.
  BOOTSTRAP                      building   ENTITIES()
  COMPILATION_UNIT_PARSER        building   DECLARATIONS(gemm!)
  C_PARSER                       building   PARSED_CODE(kernel_gemm)
                                 building   CALLEES(kernel_gemm)
  CONTROLIZER                    building   CODE(kernel_gemm)
  GEN_MULTI_RECURSE_EXPLORER     updating   CODE(kernel_gemm)
[statement_filter] 	 IN
int i, j, k;

//BLAS PARAMS
//TRANSA = 'N'
//TRANSB = 'N'
// => Form C := alpha*A*B + beta*C,
//A is NIxNK
//B is NKxNJ
//C is NIxNJ
#pragma scop
polybench_timer_start();

for(i = 0; i <= ni-1; i += 1) {
   for(j = 0; j <= nj-1; j += 1)
      C[i][j] *= beta;
   for(k = 0; k <= nk-1; k += 1)
loop_1:
      for(j = 0; j <= nj-1; j += 1)
         C[i][j] += alpha*A[i][k]*B[k][j];
}
polybench_timer_stop();

polybench_timer_print();
#pragma endscop

[sequence_filter] 	 IN
[statement_filter] 	 IN
int i, j, k;
[call_filter] 	 IN
[statement_rewrite] 	 OUT
[statement_filter] 	 IN

//BLAS PARAMS
//TRANSA = 'N'
//TRANSB = 'N'
// => Form C := alpha*A*B + beta*C,
//A is NIxNK
//B is NKxNJ
//C is NIxNJ
#pragma scop
polybench_timer_start();
[call_filter] 	 IN
[statement_rewrite] 	 OUT
[statement_filter] 	 IN

for(i = 0; i <= ni-1; i += 1) {
   for(j = 0; j <= nj-1; j += 1)
      C[i][j] *= beta;
   for(k = 0; k <= nk-1; k += 1)
loop_1:
      for(j = 0; j <= nj-1; j += 1)
         C[i][j] += alpha*A[i][k]*B[k][j];
}
[loop_filter] 	 IN
[call_filter] 	 IN
[call_filter] 	 IN
[call_filter] 	 IN
[statement_filter] 	 IN
for(j = 0; j <= nj-1; j += 1)
   C[i][j] *= beta;
for(k = 0; k <= nk-1; k += 1)
loop_1:
   for(j = 0; j <= nj-1; j += 1)
      C[i][j] += alpha*A[i][k]*B[k][j];
[sequence_filter] 	 IN
[statement_filter] 	 IN
for(j = 0; j <= nj-1; j += 1)
   C[i][j] *= beta;
[loop_filter] 	 IN
[call_filter] 	 IN
[call_filter] 	 IN
[call_filter] 	 IN
[statement_filter] 	 IN
C[i][j] *= beta;
[call_filter] 	 IN
[statement_rewrite] 	 OUT
[loop_rewrite] 	 OUT
[statement_rewrite] 	 OUT
[statement_filter] 	 IN
for(k = 0; k <= nk-1; k += 1)
loop_1:
   for(j = 0; j <= nj-1; j += 1)
      C[i][j] += alpha*A[i][k]*B[k][j];
[loop_filter] 	 IN
[call_filter] 	 IN
[call_filter] 	 IN
[call_filter] 	 IN
[statement_filter] 	 IN
loop_1:
for(j = 0; j <= nj-1; j += 1)
   C[i][j] += alpha*A[i][k]*B[k][j];
[loop_filter] 	 IN
[call_filter] 	 IN
[call_filter] 	 IN
[call_filter] 	 IN
[statement_filter] 	 IN
C[i][j] += alpha*A[i][k]*B[k][j];
[call_filter] 	 IN
[statement_rewrite] 	 OUT
[loop_rewrite] 	 OUT
[statement_rewrite] 	 OUT
[loop_rewrite] 	 OUT
[statement_rewrite] 	 OUT
[sequence_rewrite] 	 OUT
[statement_rewrite] 	 OUT
[loop_rewrite] 	 OUT
[statement_rewrite] 	 OUT
[statement_filter] 	 IN
polybench_timer_stop();
[call_filter] 	 IN
[statement_rewrite] 	 OUT
[statement_filter] 	 IN

polybench_timer_print();
[call_filter] 	 IN
[statement_rewrite] 	 OUT
[statement_filter] 	 IN
#pragma endscop

[call_filter] 	 IN
[statement_rewrite] 	 OUT
[sequence_rewrite] 	 OUT
[statement_rewrite] 	 OUT
GEN_MULTI_RECURSE_EXPLORER made for kernel_gemm.
Request: build phase/rule UNSPLIT for module main.
  CONTROLIZER                    building   CODE(gemm!)
CONTROLIZER[gemm!] (set_current_module_entity) [internal error] (/home/maksim/Documents/MYPIPS/pips_dev/ml/src/Libs/ri-util/static.c:74) 
assertion failed

 'current module is undefined' not verified
CONTROLIZER[gemm!] (pips_log_end) [internal error] stopping pips on code -1 (ABORT) at ("/home/maksim/Documents/MYPIPS/pips_dev/ml/src/Libs/misc/message.c":1134) for internal error raised
Aborted (core dumped)
